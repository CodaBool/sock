# name: slap
# permissions: # required for oidc
#   id-token: write
#   contents: read
# on:
#   push:
#     branchs: [main]
# jobs:
#   deploy:
#     if: "! contains(github.event.commits[0].message, '[no ci]')"
#     runs-on: ubuntu-latest
#     steps:
#       - uses: actions/checkout@v3
#       - name: Extract Pipline Vars
#         run: |
#           repo=${GITHUB_REPOSITORY#CodaBool/}
#           build=$(echo "${SHA:0:7}.${RUN_NUMBER}"|tr -d '"')
#           echo "stage=${GITHUB_REF#refs/heads/}" >> $GITHUB_ENV
#           echo "run=${RUN_NUMBER}" >> $GITHUB_ENV
#           echo "repo=${repo,,}" >> $GITHUB_ENV
#           echo "build=${build}" >> $GITHUB_ENV
#         env:
#           SHA: ${{ toJSON(github.sha) }}
#           RUN_NUMBER: ${{ toJSON(github.run_number) }}
#       - uses: aws-actions/configure-aws-credentials@v1
#         with:
#           role-to-assume: arn:aws:iam::919759177803:role/gh-action-assume
#           aws-region: us-east-1
#       - name: Pricing
#         run: |
#           price=$(aws --region=us-east-1 ec2 describe-spot-price-history --instance-types t4g.nano --start-time=$(date +%s) --product-descriptions="Linux/UNIX" --query 'SpotPriceHistory[*].{az:AvailabilityZone, price:SpotPrice}' | jq -r ".[] | select(.az == \"us-east-1a\") | .price")
#           price_day=$(python3 -c "import sys; print(round(float(sys.argv[1]) * 24, 2))" $price)
#           price_month=$(python3 -c "import sys; print(round(float(sys.argv[1]) * 24 * 30.4, 2))" $price)
#           echo "Server will cost \$$price_day/day & \$$price_month/month"
#       - uses: hashicorp/setup-packer@main
#         with:
#           version: 1.9.1 # https://releases.hashicorp.com/packer
#       - name: Packer
#         working-directory: ./ops
#         run: |
#           packer init .
#           packer build -var="unique_ami_name=${{ env.repo }}-${{ env.run }}" .
#         env:
#           PACKER_GITHUB_API_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#       - uses: hashicorp/setup-terraform@v2
#         with:
#           terraform_version: 1.5.2 # https://releases.hashicorp.com/terraform
#           terraform_wrapper: false
#       - name: Deploy
#         working-directory: ./ops
#         run: |
#           terraform init
#           terraform apply -auto-approve -var="ssh_ip=${{ secrets.WIN_IP }}"
#       - name: Dashboard
#         working-directory: ./ops
#         run: |
#           ./dashboard.sh
#           #./rm_ami.sh || true
#           #./rm_ebs.sh || true
#       - name: Tag
#         working-directory: ./ops
#         run: aws ec2 create-tags --resources $(terraform output -raw id) --tags Key=Name,Value=sock